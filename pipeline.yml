AWSTemplateFormatVersion: "2010-09-09"

Description: "Creates a build, test and deployment pipeline."

Parameters:

  GitHubToken:
    Type: String
    NoEcho: true
    Description: A Github OAuth Token with public_repo or repo scope.

  GitHubUser:
    Type: String
    Description: Organisation or Username that the repository belongs to.

  Repo:
    Type: String
    Description: The name of the repository.

  Branch:
    Type: String
    Default: master
    Description: Branch to use from the repository.

  Project:
    Type: String
    Description: The name this project will be identified as inside AWS.


Metadata:

  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Project Options"
        Parameters:
          - Project
      - Label:
          default: "GitHub Configuration"
        Parameters:
          - GitHubToken
          - GitHubUser
          - Repo
          - Branch
    ParameterLabels:
      GitHubToken:
        default: "GitHub Personal Access Token"
      GitHubUser:
        default: "Username or Organisation Name"
      Repo:
        default: "Repository Name"
      Branch:
        default: "Branch on Repository"
      Project:
        default: "A unique short identifier"

Resources:

  PipelineArtifactStore:
    Type: AWS::S3::Bucket
    Properties:
      LifecycleConfiguration:
        Rules:
          - NoncurrentVersionExpirationInDays: 3
            Status: Enabled
      VersioningConfiguration:
        Status: Enabled

  PipelineSNSTopic:
    Type: AWS::SNS::Topic

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RestartExecutionOnUpdate: false
      ArtifactStore:
        Location:
          Ref: PipelineArtifactStore
        Type: S3
      RoleArn:
        Fn::GetAtt: [PipelineRole, Arn]
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              RunOrder: 1
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref Repo
                Branch: !Ref Branch
                OAuthToken: !Ref GitHubToken
        - Name: Build
          Actions:
            - Name: Build
              RunOrder: 2
              InputArtifacts:
                - Name: SourceOutput
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              OutputArtifacts:
                - Name: BuildOutput
              Configuration:
                ProjectName:
                  Ref: Build
        - Name: Test
          Actions:
            - Name: Create
              RunOrder: 1
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: BuildOutput
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_IAM
                RoleArn:
                  Fn::GetAtt: [CloudformationRole, Arn]
                StackName:
                    Fn::Sub: "${Project}-test-system"
                ChangeSetName:
                    Fn::Sub: "${Project}-test-system-changeset"
                TemplatePath: BuildOutput::template.yml
                TemplateConfiguration: BuildOutput::test.json
            - Name: Deploy
              RunOrder: 2
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                Capabilities: CAPABILITY_IAM
                ChangeSetName:
                    Fn::Sub: "${Project}-test-system-changeset"
                RoleArn:
                  Fn::GetAtt: [CloudformationRole, Arn]
                StackName:
                    Fn::Sub: "${Project}-test-system"
            - Name: Approve
              RunOrder: 5
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: 1
              Configuration:
                NotificationArn:
                  Ref: PipelineSNSTopic
                CustomData:
                  Fn::Sub: 'Do you want to create a change set against the production stack and delete the ${Project}-test stack?'
            - Name: Delete
              RunOrder: 7
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: DELETE_ONLY
                RoleArn:
                  Fn::GetAtt: [CloudformationRole, Arn]
                StackName:
                    Fn::Sub: "${Project}-test-system"
        - Name: Release
          Actions:
            - Name: Create
              RunOrder: 1
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: BuildOutput
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_IAM
                RoleArn:
                  Fn::GetAtt: [CloudformationRole, Arn]
                StackName:
                    Fn::Sub: "${Project}-release"
                ChangeSetName:
                    Fn::Sub: "${Project}-release-changeset"
                TemplatePath: BuildOutput::template.yml
                TemplateConfiguration: BuildOutput::release.json
            - Name: ApproveChangeSet
              RunOrder: 2
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: 1
              Configuration:
                NotificationArn:
                  Ref: PipelineSNSTopic
                CustomData:
                  Fn::Sub: 'A new change set was created for the ${Project} stack. Do you want to implement the changes?'
            - Name: Deploy
              RunOrder: 3
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                Capabilities: CAPABILITY_IAM
                ChangeSetName:
                    Fn::Sub: "${Project}-release-changeset"
                RoleArn:
                  Fn::GetAtt: [CloudformationRole, Arn]
                StackName:
                    Fn::Sub: "${Project}-release"

  Build:
    Type: AWS::CodeBuild::Project
    Properties:
      Name:
        Fn::Sub: "${Project}"
      TimeoutInMinutes: 10
      ServiceRole:
        Fn::GetAtt: [BuildRole, Arn]
      Source:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/nodejs:6.3.1
        EnvironmentVariables:
          - Name: S3_BUCKET
            Value:
              Ref: PipelineArtifactStore
          - Name: TEMPLATE_FILE_NAME
            Value: template.yml
      Artifacts:
        Type: CODEPIPELINE

  CloudformationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: cloudformation.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CloudFormationRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 'cloudformation:*'
                  - 's3:*'
                  - 'iam:*'
                  - 'lambda:*'
                  - 'dynamodb:*'
                  - 'sns:*'
                  - 'events:*'
                  - 'lex:*'
                Effect: Allow
                Resource: '*'

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 's3:*'
                Effect: Allow
                Resource:
                  - Fn::Sub: "arn:aws:s3:::${PipelineArtifactStore}"
                  - Fn::Sub: "arn:aws:s3:::${PipelineArtifactStore}/*"
              - Action:
                  - 'codebuild:*'
                Effect: Allow
                Resource:
                  - Fn::Sub: "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${Build}"
              - Action:
                  - 'cloudformation:CreateStack'
                  - 'cloudformation:DescribeStacks'
                  - 'cloudformation:DeleteStack'
                  - 'cloudformation:UpdateStack'
                  - 'cloudformation:CreateChangeSet'
                  - 'cloudformation:ExecuteChangeSet'
                  - 'cloudformation:DeleteChangeSet'
                  - 'cloudformation:DescribeChangeSet'
                  - 'cloudformation:SetStackPolicy'
                Effect: Allow
                Resource:
                  - Fn::Sub: "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:*/${Project}-*/*"
                  - '*'
              - Action:
                  - 'iam:PassRole'
                Effect: Allow
                Resource:
                  - '*'
              - Action:
                  - 'sns:Publish'
                Effect: Allow
                Resource:
                  - Ref: PipelineSNSTopic

  BuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodeBuildPackageAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Effect: Allow
                Resource: '*'
              - Action:
                  - 's3:*'
                  - 'cloudformation:*'
                Effect: Allow
                Resource: '*'
